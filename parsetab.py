
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCOS DIVIDE EQUALS FLOAT HELP LPAREN MINUS NAME NUMBER PLUS POWER RPAREN SIN TAN TIMESstatement : NAME EQUALS expressionstatement : expressionexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOATexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,8,9,10,11,12,],[2,14,14,14,14,14,14,14,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[4,-11,10,4,4,-9,-10,4,4,4,4,4,-3,-11,10,10,-4,-5,-6,-7,-8,]),'LPAREN':([0,4,5,8,9,10,11,12,],[5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,8,9,10,11,12,],[6,6,6,6,6,6,6,6,]),'FLOAT':([0,4,5,8,9,10,11,12,],[7,7,7,7,7,7,7,7,]),'$end':([1,2,3,6,7,13,14,16,17,18,19,20,21,],[0,-11,-2,-9,-10,-3,-11,-1,-4,-5,-6,-7,-8,]),'EQUALS':([2,],[8,]),'PLUS':([2,3,6,7,13,14,15,16,17,18,19,20,21,],[-11,9,-9,-10,-3,-11,9,9,-4,-5,-6,-7,-8,]),'TIMES':([2,3,6,7,13,14,15,16,17,18,19,20,21,],[-11,11,-9,-10,-3,-11,11,11,11,11,-6,-7,-8,]),'DIVIDE':([2,3,6,7,13,14,15,16,17,18,19,20,21,],[-11,12,-9,-10,-3,-11,12,12,12,12,-6,-7,-8,]),'RPAREN':([6,7,13,14,15,17,18,19,20,21,],[-9,-10,-3,-11,21,-4,-5,-6,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,8,9,10,11,12,],[3,13,15,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','rpncalc.py',133),
  ('statement -> expression','statement',1,'p_statement_expr','rpncalc.py',137),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','rpncalc.py',141),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','rpncalc.py',145),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','rpncalc.py',146),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','rpncalc.py',147),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','rpncalc.py',148),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','rpncalc.py',156),
  ('expression -> NUMBER','expression',1,'p_expression_number','rpncalc.py',160),
  ('expression -> FLOAT','expression',1,'p_expression_number','rpncalc.py',161),
  ('expression -> NAME','expression',1,'p_expression_name','rpncalc.py',165),
]
