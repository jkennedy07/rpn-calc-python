
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCOS DIVIDE EQUALS FLOAT LPAREN MINUS NUMBER PLUS POWER RPAREN SIN TAN TIMESstatement : expressionexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOAT'
    
_lr_action_items = {'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[3,8,3,3,-8,-9,3,3,3,3,-2,8,-3,-4,-5,-6,-7,]),'LPAREN':([0,3,4,7,8,9,10,],[4,4,4,4,4,4,4,]),'NUMBER':([0,3,4,7,8,9,10,],[5,5,5,5,5,5,5,]),'FLOAT':([0,3,4,7,8,9,10,],[6,6,6,6,6,6,6,]),'$end':([1,2,5,6,11,13,14,15,16,17,],[0,-1,-8,-9,-2,-3,-4,-5,-6,-7,]),'PLUS':([2,5,6,11,12,13,14,15,16,17,],[7,-8,-9,-2,7,-3,-4,-5,-6,-7,]),'TIMES':([2,5,6,11,12,13,14,15,16,17,],[9,-8,-9,-2,9,9,9,-5,-6,-7,]),'DIVIDE':([2,5,6,11,12,13,14,15,16,17,],[10,-8,-9,-2,10,10,10,-5,-6,-7,]),'RPAREN':([5,6,11,12,13,14,15,16,17,],[-8,-9,-2,17,-3,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,7,8,9,10,],[2,11,12,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','rpncalc.py',126),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','rpncalc.py',130),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','rpncalc.py',134),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','rpncalc.py',135),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','rpncalc.py',136),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','rpncalc.py',137),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','rpncalc.py',145),
  ('expression -> NUMBER','expression',1,'p_expression_number','rpncalc.py',149),
  ('expression -> FLOAT','expression',1,'p_expression_number','rpncalc.py',150),
]
